AWSTemplateFormatVersion: "2010-09-09"
Description: deploy pipeline 
########################
#      Parameters      #
########################
Parameters:
  Environment:
    Description: Type of Environment. 
    Type: String                                                                                                  
    Default: Sandbox
    AllowedValues:                                                                                                
      - Sandbox
      - prod 
      - qa
      - dev
  ProjectName:
    Description: The name of your pipeline project.
    Type: String
    Default: Project
  PipelineRepository:
    Description: Name of your CODECOMMIT repository with the dockerfile and info to build the image.
    Type: String
    Default: dockerrepo
  VpcId:
    Description: 'ID of the VPC (e.g., vpc-0343606e).'
    Type: 'AWS::EC2::VPC::Id'
  Owner:
    Description: Owner name.
    Type: String
  ECSClusterName:
    Description: Name of your ECS Cluster.
    Type: String
  ECSServiceName:
    Description: Name of the service inside your cluster.
    Type: String
  RepoURI:
    Description: RepositoryURI of your ECR
    Type: String
  ECRName:
    Description: Name of your ECR 
    Type: String
    Default: 12345678910.dkr.ecr.us-east-1.amazonaws.com/ECR
  BuildName:
    Description: Name of your CodeBuild project
    Type: String
    Default: MyCodeBuildProject
  ContainerName: 
    Description: Name of the container on your task definition.
    Type: String


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CodePipeline information"
        Parameters:
          - Environment
          - ProjectName
          - VpcId
          - Owner
          - PipelineRepository
      - Label:
          default: "CodeBuild Variables"
        Parameters:
          - BuildName
          - ECSClusterName
          - ECSServiceName
          - ContainerName
          - ECRName
          - RepoURI

########################
#      Resources       #
########################
Resources:
### For Build Cache and Artefacts
  S3Cache:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Environment 
          Value: !Ref Environment
        - Key: Name
          Value: !Join [ "-", [ !Ref Environment,pipelineCache]]

  S3Artefact:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Environment 
          Value: !Ref Environment
        - Key: Name
          Value: !Join [ "-", [ !Ref Environment,pipelineArtefact]]

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "ECS instance security group"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: 443
          ToPort: 443
          CidrIp: "0.0.0.0/0"
      VpcId: !Ref VpcId

############################################################################################
###                                 CODEDEPLOY PIPELINE                
############################################################################################
### IAM Roles
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codedeploy.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess 

### Build
  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      TimeoutInMinutes: 60
      Artifacts: 
        Type: "NO_ARTIFACTS"
      Cache: 
        Location: !Ref S3Cache
        Type: S3
      Description: !Join [ "-", [!Ref Environment, DRE build]]
      Name: !Ref BuildName
      ServiceRole: !Ref CodeBuildRole
      Source: 
        Type: "CODECOMMIT"
        GitCloneDepth: 1
        InsecureSsl: false
        Location: !Join ["", [!Sub "https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/",!Ref PipelineRepository]]
        # BuildSpec: !Join [ "-", [!Ref Environment,buildspec.yml]]
      Environment:
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
          Type: LINUX_CONTAINER
          EnvironmentVariables:
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: AWS_ACCOUNT_ID
              Value: !Ref AWS::AccountId
            - Name: IMAGE_REPO_NAME
              Value: !Ref ECRName
            - Name: REPOSITORY_URI
              Value: !Ref RepoURI
            - Name: IMAGE_TAG
              Value: latest
            - Name: CONTAINER_NAME
              Value: !Ref ContainerName
          PrivilegedMode: true

### Deploy
  CodeDeployApp:
    Type: "AWS::CodeDeploy::DeploymentConfig"
    Properties:
      DeploymentConfigName: !Join ["-", [!Ref Environment,!Ref ProjectName,"config"]]
      MinimumHealthyHosts:
        Type: "FLEET_PERCENT"
        Value: 50

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Ref CodeDeployApp
      ComputePlatform: ECS

### Pipeline
  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      ArtifactStore: 
        Location: !Ref S3Artefact
        Type: "S3"
      RoleArn: !GetAtt [CodePipelineRole, Arn]
      Name: !Join ["-", [!Join [ "-", [!Ref Environment,!Ref ProjectName]],pipeline]]
      Stages: 
      - 
        Name: "Source"
        Actions: 
        - 
          Name: "pipelinecode"
          ActionTypeId: 
            Category: "Source"
            Owner: "AWS"
            Provider: "CodeCommit"
            Version: "1"
          Configuration: 
            BranchName: "master"
            OutputArtifactFormat: CODEBUILD_CLONE_REF
            PollForSourceChanges: "false"
            RepositoryName: !Ref PipelineRepository
          Region: "us-east-1"
          OutputArtifacts: 
          - 
            Name: "pipelinecode"            
      - 
        Name: "Build"
        Actions: 
        - 
          Name: "Build"
          ActionTypeId: 
            Category: "Build"
            Owner: "AWS"
            Provider: "CodeBuild"
            Version: "1"
          Configuration: 
            ProjectName: !Ref CodeBuild
          Region: "us-east-1"
          InputArtifacts: 
          - 
            Name: "pipelinecode"   
          OutputArtifacts: 
          - 
            Name: "BuildArtifact"
      - 
        Name: "Deploy"
        Actions: 
        - 
          Name: !Join [ "", [Deploy,!Ref ProjectName]]
          ActionTypeId: 
            Category: "Deploy"
            Owner: "AWS"
            Provider: "ECS"
            Version: "1"
          Configuration: 
            ClusterName: !Ref ECSClusterName
            ServiceName: !Ref ECSServiceName
          Region: "us-east-1"
          InputArtifacts: 
          - 
            Name: "BuildArtifact"


Outputs:
  CodeDeployDeploymentGroup:
    Value: !Ref CodeDeployApplication